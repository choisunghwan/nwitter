{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b0ca0f3.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBjl5SXjGytAnI0CI_VlZZep1qmyuppKE4\",\n  authDomain: \"nwitter-8b13b.firebaseapp.com\",\n  projectId: \"nwitter-8b13b\",\n  storageBucket: \"nwitter-8b13b.appspot.com\",\n  messagingSenderId: \"163650367561\",\n  appId: \"1:163650367561:web:366cf7c5060348d3d0cf98\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#c3ff38\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (nweet === \"\") {\n      return;\n    }\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    if (Boolean(theFile)) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService\n      .collection(\"nweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const nweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNweets(nweetArray);\n      });\n  }, []);\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#c3ff38\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#c3ff38\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\r\nimport App from \"components/App\";\r\nimport \"./styles.css\";\r\nimport React from \"react\"\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}